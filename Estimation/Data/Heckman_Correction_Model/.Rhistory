mutate(noA_noB = .5,
A_noB = .5 + A_effect,
noA_B = .5 + B_effect,
A_B = .5 + A_effect + B_effect) %>%
mutate(B_among_A = (A_B)/(A_B + A_noB),
B_among_nonA = (noA_B)/(noA_B+noA_noB)) %>%
mutate(effect = B_among_A - B_among_nonA)
ggplot(tb, aes(x = A_effect, y = B_effect)) +
geom_raster(aes(fill = effect), interpolate=TRUE) +
scale_fill_gradient2(low="red", mid="blue", high="red",
midpoint=0, limits=range(tb$effect)) +
theme_classic() +
labs(x = "Effect of binary A on P(C = 1)",
y = "Effect of binary B on P(C = 1)",
title = "Estimated linear effect of A on B when selecting on collider",
subtitle = "A, B, C are binary. True A and B relationship is 0.")
1/1.75
tb <- tibble(A_effect = sort(rep(seq(-.5,.5,.002),501)),
B_effect = rep(seq(-.5,.5,.002),501)) %>%
mutate(noA_noB = .5,
A_noB = .5 + A_effect,
noA_B = .5 + B_effect,
A_B = .5 + A_effect + B_effect) %>%
mutate(B_among_A = (A_B)/(A_B + A_noB),
B_among_nonA = (noA_B)/(noA_B+noA_noB)) %>%
mutate(effect = ifelse(A_B < 0 | A_B > 1, NA, B_among_A - B_among_nonA))
ggplot(tb, aes(x = A_effect, y = B_effect)) +
geom_raster(aes(fill = effect), interpolate=TRUE) +
scale_fill_gradient2(low="red", mid="blue", high="red",
midpoint=0, limits=range(tb$effect)) +
theme_classic() +
labs(x = "Effect of binary A on P(C = 1)",
y = "Effect of binary B on P(C = 1)",
title = "Estimated linear effect of A on B when selecting on collider",
subtitle = "A, B, C are binary. True A and B relationship is 0.")
ggplot(tb, aes(x = A_effect, y = B_effect)) +
geom_raster(aes(fill = effect), interpolate=TRUE) +
scale_fill_gradient2(low="red", mid="blue", high="red",
midpoint=0, limits=range(tb$effect)) +
theme_classic() +
labs(x = "Effect of binary A on P(C = 1)",
y = "Effect of binary B on P(C = 1)",
title = "Estimated linear effect of A on B when selecting on collider",
subtitle = "A, B, C are binary w/ mean .5. True A and B relationship is 0.")+
guide_legend(title = "Collider Bias")
ggplot(tb, aes(x = A_effect, y = B_effect)) +
geom_raster(aes(fill = effect), interpolate=TRUE) +
scale_fill_gradient2(low="red", mid="blue", high="red",
midpoint=0, limits=range(tb$effect)) +
theme_classic() +
labs(x = "Effect of binary A on P(C = 1)",
y = "Effect of binary B on P(C = 1)",
title = "Estimated linear effect of A on B when selecting on collider",
subtitle = "A, B, C are binary w/ mean .5. True A and B relationship is 0.")+
guides(fill = guide_legend("Collider Bias"))
ggplot(tb, aes(x = A_effect, y = B_effect)) +
geom_raster(aes(fill = effect), interpolate=TRUE) +
scale_fill_gradient2(low="red", mid="blue", high="red",
midpoint=0, limits=range(tb$effect)) +
theme_classic() +
labs(x = "Effect of binary A on P(C = 1)",
y = "Effect of binary B on P(C = 1)",
title = "Estimated linear effect of A on B when selecting on collider",
caption = "A, B, C are binary w/ mean .5. True A and B relationship is 0.\nGray is when combined A and B effect gives P(C) outside 0 and 1.")+
guides(fill_gradient2 = guide_legend("Collider Bias"))
ggplot(tb, aes(x = A_effect, y = B_effect)) +
geom_raster(aes(fill = effect), interpolate=TRUE) +
scale_fill_gradient2(low="red", mid="blue", high="red",
midpoint=0, limits=range(tb$effect)) +
theme_classic() +
labs(x = "Effect of binary A on P(C = 1)",
y = "Effect of binary B on P(C = 1)",
title = "Estimated linear effect of A on B when selecting on collider",
caption = "A, B, C are binary w/ mean .5. True A and B relationship is 0.\nGray is when combined A and B effect gives P(C) outside 0 and 1.")+
scale_fill_continuous(name = "Collider Bias")
ggplot(tb, aes(x = A_effect, y = B_effect)) +
geom_raster(aes(fill = effect), interpolate=TRUE) +
scale_fill_gradient2(low="red", mid="blue", high="red",
midpoint=0, limits=range(tb$effect),
name = "Collider Bias") +
theme_classic() +
labs(x = "Effect of binary A on P(C = 1)",
y = "Effect of binary B on P(C = 1)",
title = "Estimated linear effect of A on B when selecting on collider",
caption = "A, B, C are binary w/ mean .5. True A and B relationship is 0.\nGray is when combined A and B effect gives P(C) outside 0 and 1.")
library(mlogit)
help(package='mlogit')
# Get car data
data(Car)
View(Car)
# Get catsup data, in "wide" choice format
data(Catsup)
View(Catsup)
class(Car)
class(Catsup)
View(Catsup)
str(Car)
# Turn Catsup into a mlogit.data object.
# For this we need to specify the choice variable with choice
# whether it's currently in wide or long format with shape
# the column numbers of the alternative-specific variables with varying.
# If this were long data we'd also want:
# the case identifier with id.var (for individuals) and/or chid.var
# (for multiple choices within individuals)
# And a variable indicating the alternatives with alt.var
mlogit.Car <- mlogit.data(Car,
choice = choice,
shape = 'wide',
varying = 5:70)
# Turn Catsup into a mlogit.data object.
# For this we need to specify the choice variable with choice
# whether it's currently in wide or long format with shape
# the column numbers of the alternative-specific variables with varying.
# If this were long data we'd also want:
# the case identifier with id.var (for individuals) and/or chid.var
# (for multiple choices within individuals)
# And a variable indicating the alternatives with alt.var
mlogit.Car <- mlogit.data(Car,
choice = 'choice',
shape = 'wide',
varying = 5:70)
names(Car)[5]
substr('choice3',7,7)
# Turn Catsup into a mlogit.data object.
# Currently our choice variable is of the form 'choice1','choice2', etc.
# but we want it to just be 1, 2, etc. to match the variable names
# which just end with 1, 2, etc. rather than choice1, choice2.
Car$choice <- as.numeric(substr(Car$choice,7,7))
# For this we need to specify the choice variable with choice
# whether it's currently in wide or long format with shape
# the column numbers of the alternative-specific variables with varying.
# If this were long data we'd also want:
# the case identifier with id.var (for individuals) and/or chid.var
# (for multiple choices within individuals)
# And a variable indicating the alternatives with alt.var
mlogit.Car <- mlogit.data(Car,
choice = 'choice',
shape = 'wide',
varying = 5:70)
# For this we need to specify the choice variable with choice
# whether it's currently in wide or long format with shape
# the column numbers of the alternative-specific variables with varying.
# If this were long data we'd also want:
# the case identifier with id.var (for individuals) and/or chid.var
# (for multiple choices within individuals)
# And a variable indicating the alternatives with alt.var
mlogit.Car <- mlogit.data(Car,
choice = choice,
shape = 'wide',
varying = 5:70)
# For this we need to specify the choice variable with choice
# whether it's currently in wide or long format with shape
# the column numbers of the alternative-specific variables with varying.
# If this were long data we'd also want:
# the case identifier with id.var (for individuals) and/or chid.var
# (for multiple choices within individuals)
# And a variable indicating the alternatives with alt.var
mlogit.Car <- mlogit.data(Car,
choice = 'choice',
shape = 'wide',
varying = 5:70)
# For this we need to specify the choice variable with choice
# whether it's currently in wide or long format with shape
# the column numbers of the alternative-specific variables with varying.
# If this were long data we'd also want:
# the case identifier with id.var (for individuals) and/or chid.var
# (for multiple choices within individuals)
# And a variable indicating the alternatives with alt.var
mlogit.Car <- mlogit.data(Car,
choice = 'choice',
shape = 'wide',
varying = 5:70,
alt.levels = 1:6)
table(Car$choice)
# For this we need to specify the choice variable with choice
# whether it's currently in wide or long format with shape
# the column numbers of the alternative-specific variables with varying.
# If this were long data we'd also want:
# the case identifier with id.var (for individuals) and/or chid.var
# (for multiple choices within individuals)
# And a variable indicating the alternatives with alt.var
mlogit.Car <- mlogit.data(Car,
choice = 'choice',
shape = 'wide',
varying = 5:70,
alt.levels = 1:6,sep="")
View(mlogit.Car)
# For this we need to specify the choice variable with choice
# whether it's currently in wide or long format with shape
# the column numbers of the alternative-specific variables with varying.
# If this were long data we'd also want:
# the case identifier with id.var (for individuals) and/or chid.var
# (for multiple choices within individuals)
# And a variable indicating the alternatives with alt.var
mlogit.Car <- mlogit.data(Car,
choice = 'choice',
shape = 'wide',
varying = 5:70,
sep="")
# Get Car data, in "wide" choice format
data(Car)
# For this we need to specify the choice variable with choice
# whether it's currently in wide or long format with shape
# the column numbers of the alternative-specific variables with varying.
# If this were long data we'd also want:
# the case identifier with id.var (for individuals) and/or chid.var
# (for multiple choices within individuals)
# And a variable indicating the alternatives with alt.var
mlogit.Car <- mlogit.data(Car,
choice = 'choice',
shape = 'wide',
varying = 5:70,
alt.levels = 1:6,sep="")
View(mlogit.Car)
# For this we need to specify the choice variable with choice
# whether it's currently in wide or long format with shape
# the column numbers of the alternative-specific variables with varying.
# We als
# If this were long data we'd also want:
# the case identifier with id.var (for individuals) and/or chid.var
# (for multiple choices within individuals)
# And a variable indicating the alternatives with alt.var
mlogit.Car <- mlogit.data(Car,
choice = 'choice',
shape = 'wide',
varying = 5:70,
sep="")
View(Car)
str(mlogit.Car)
names(mlogit.Car)
# Now we can run the regression with mlogit().
# We "regress" the choice on the alternative-specific variables like type, fuel, and price
# Then put a pipe separator |
# and add our case-specific variables like college
model <- mlogit(choice ~ type + fuel + price | college,
data = mlogit.Car)
View(mlogit.Car)
# For this we need to specify the choice variable with choice
# whether it's currently in wide or long format with shape
# the column numbers of the alternative-specific variables with varying.
# We also need sep = "" since our wide-format variable names are type1, type2, etc.
# If the variable names were type_1, type_2, etc., we'd need sep = "_".
# If this were long data we'd also want:
# the case identifier with id.var (for individuals) and/or chid.var
# (for multiple choices within individuals)
# And a variable indicating the alternatives with alt.var
mlogit.Car <- mlogit.data(Car,
choice = 'choice',
shape = 'wide',
varying = 5:70,
alt.levels = 1:6,
sep="")
# whether it's currently in wide or long format with shape
# the column numbers of the alternative-specific variables with varying.
# We need alt.levels to tell us what our alternatives are (1-6, as seen in choice).
# We also need sep = "" since our wide-format variable names are type1, type2, etc.
# If the variable names were type_1, type_2, etc., we'd need sep = "_".
# If this were long data we'd also want:
# the case identifier with id.var (for individuals) and/or chid.var
# (for multiple choices within individuals)
# And a variable indicating the alternatives with alt.var
# But could skip the alt.levels and sep arguments
mlogit.Car <- mlogit.data(Car,
choice = 'choice',
shape = 'wide',
varying = 5:70,
alt.levels = 1:6,
sep="")
# Now we can run the regression with mlogit().
# We "regress" the choice on the alternative-specific variables like type, fuel, and price
# Then put a pipe separator |
# and add our case-specific variables like college
model <- mlogit(choice ~ type + fuel + price | college,
data = mlogit.Car)
# Look at the results
summary(model)
# Read in data from the College Scorecard
df <- read.csv('https://raw.githubusercontent.com/NickCH-K/LOST/master/Data/Fixed_Effects_in_Linear_Regression/Scorecard.csv')
library(tidyverse)
df %>%
group_by(inst_name) %>%
mutate_all(.funs = function(x) x - mean(x)) %>%
ungroup() %>%
summarize_all(.funs = var(x))
help(mutate_all)
df %>%
group_by(inst_name) %>%
mutate_all(function(x) x - mean(x)) %>%
ungroup() %>%
summarize_all(.funs = var(x))
df %>%
group_by(inst_name) %>%
mutate_all(.funs = function(x) x - mean(x)) %>%
ungroup() %>%
summarize_all(.funs = var)
df <- df %>% select(inst_name, earnings_med, year)
df %>%
group_by(inst_name) %>%
mutate_all(.funs = function(x) x - mean(x)) %>%
ungroup() %>%
summarize_all(.funs = var)
str(df)
df %>%
group_by(inst_name) %>%
mutate_all(.funs = function(x) x - mean(x)) %>%
ungroup() %>%
select(-inst_name) %>%
summarize_all(.funs = var)
library(tidyverse)
s <- 'Female                 & -0.00890*** & -0.01741*** & -0.01852***  &  0.00127***  \\
&  (0.00020)  &  (0.00032)  &  (0.00017)   &  (0.00032)   \\
White                  & 0.00379***  & -0.00927*** & -0.01709***  &  0.01586***  \\
&  (0.00026)  &  (0.00042)  &  (0.00026)   &  (0.00043)   \\
Family Income          &             &             &              &              \\
Quartile 2             & 0.02599***  & 0.03467***  & -0.00309***  & -0.01257***  \\
&  (0.00042)  &  (0.00060)  &  (0.00035)   &  (0.00061)   \\
Quartile 3             & 0.00543***  & 0.01082***  &  0.00155***  & -0.02710***  \\
&  (0.00032)  &  (0.00059)  &  (0.00033)   &  (0.00059)   \\
Quartile 4             & -0.00568*** & 0.03810***  &  0.00775***  & -0.01564***  \\
&  (0.00032)  &  (0.00058)  &  (0.00032)   &  (0.00058)   \\
High School Test Score &             &             &              &              \\
Quartile 2             & 0.02367***  & -0.10184*** &  0.05445***  & -0.00440***  \\
&  (0.00063)  &  (0.00094)  &  (0.00099)   &  (0.00094)   \\
Quartile 3             & 0.02004***  & -0.07197*** &  0.06322***  & -0.02303***  \\
&  (0.00059)  &  (0.00090)  &  (0.00097)   &  (0.00090)   \\
Quartile 4             & 0.01322***  & -0.09268*** &  0.07176***  & -0.06212***  \\
&  (0.00058)  &  (0.00090)  &  (0.00097)   &  (0.00089)   \\
Mother\'s Education     &             &             &              &              \\
Quartile 2             & -0.01588*** & -0.00194*** &  0.00879***  &  0.01940***  \\
&  (0.00044)  &  (0.00058)  &  (0.00035)   &  (0.00056)   \\
Quartile 3             & -0.01429*** & -0.02407*** &  0.01773***  &  0.00579***  \\
&  (0.00047)  &  (0.00062)  &  (0.00037)   &  (0.00061)   \\
Quartile 4             & -0.01175*** & -0.01512*** & -0.00203***  &  0.00486***  \\
&  (0.00047)  &  (0.00063)  &  (0.00038)   &  (0.00062)   \\
Control for Sample     &     Yes     &     Yes     &     Yes      &     Yes      \\ \hline
Observations           &   63,364    &   63,364    &    63,364    &   63,364    \\
R-squared              &   0.53002   &   0.61506   &   0.52325    &   0.70950 '
s <- 'Female                 & -0.00890*** & -0.01741*** & -0.01852***  &  0.00127***  \\
&  (0.00020)  &  (0.00032)  &  (0.00017)   &  (0.00032)   \\
White                  & 0.00379***  & -0.00927*** & -0.01709***  &  0.01586***  \\
&  (0.00026)  &  (0.00042)  &  (0.00026)   &  (0.00043)   \\
Family Income          &             &             &              &              \\
Quartile 2             & 0.02599***  & 0.03467***  & -0.00309***  & -0.01257***  \\
&  (0.00042)  &  (0.00060)  &  (0.00035)   &  (0.00061)   \\
Quartile 3             & 0.00543***  & 0.01082***  &  0.00155***  & -0.02710***  \\
&  (0.00032)  &  (0.00059)  &  (0.00033)   &  (0.00059)   \\
Quartile 4             & -0.00568*** & 0.03810***  &  0.00775***  & -0.01564***  \\
&  (0.00032)  &  (0.00058)  &  (0.00032)   &  (0.00058)   \\
High School Test Score &             &             &              &              \\
Quartile 2             & 0.02367***  & -0.10184*** &  0.05445***  & -0.00440***  \\
&  (0.00063)  &  (0.00094)  &  (0.00099)   &  (0.00094)   \\
Quartile 3             & 0.02004***  & -0.07197*** &  0.06322***  & -0.02303***  \\
&  (0.00059)  &  (0.00090)  &  (0.00097)   &  (0.00090)   \\
Quartile 4             & 0.01322***  & -0.09268*** &  0.07176***  & -0.06212***  \\
&  (0.00058)  &  (0.00090)  &  (0.00097)   &  (0.00089)   \\
Mother\'s Education     &             &             &              &              \\
Quartile 2             & -0.01588*** & -0.00194*** &  0.00879***  &  0.01940***  \\
&  (0.00044)  &  (0.00058)  &  (0.00035)   &  (0.00056)   \\
Quartile 3             & -0.01429*** & -0.02407*** &  0.01773***  &  0.00579***  \\
&  (0.00047)  &  (0.00062)  &  (0.00037)   &  (0.00061)   \\
Quartile 4             & -0.01175*** & -0.01512*** & -0.00203***  &  0.00486***  \\
&  (0.00047)  &  (0.00063)  &  (0.00038)   &  (0.00062)   \\
Control for Sample     &     Yes     &     Yes     &     Yes      &     Yes      \\ \ hline
Observations           &   63,364    &   63,364    &    63,364    &   63,364    \\
R-squared              &   0.53002   &   0.61506   &   0.52325    &   0.70950 '
''
s <- 'Female                 & -0.00890*** & -0.01741*** & -0.01852***  &  0.00127***  \\
&  (0.00020)  &  (0.00032)  &  (0.00017)   &  (0.00032)   \\
White                  & 0.00379***  & -0.00927*** & -0.01709***  &  0.01586***  \\
&  (0.00026)  &  (0.00042)  &  (0.00026)   &  (0.00043)   \\
Family Income          &             &             &              &              \\
Quartile 2             & 0.02599***  & 0.03467***  & -0.00309***  & -0.01257***  \\
&  (0.00042)  &  (0.00060)  &  (0.00035)   &  (0.00061)   \\
Quartile 3             & 0.00543***  & 0.01082***  &  0.00155***  & -0.02710***  \\
&  (0.00032)  &  (0.00059)  &  (0.00033)   &  (0.00059)   \\
Quartile 4             & -0.00568*** & 0.03810***  &  0.00775***  & -0.01564***  \\
&  (0.00032)  &  (0.00058)  &  (0.00032)   &  (0.00058)   \\
High School Test Score &             &             &              &              \\
Quartile 2             & 0.02367***  & -0.10184*** &  0.05445***  & -0.00440***  \\
&  (0.00063)  &  (0.00094)  &  (0.00099)   &  (0.00094)   \\
Quartile 3             & 0.02004***  & -0.07197*** &  0.06322***  & -0.02303***  \\
&  (0.00059)  &  (0.00090)  &  (0.00097)   &  (0.00090)   \\
Quartile 4             & 0.01322***  & -0.09268*** &  0.07176***  & -0.06212***  \\
&  (0.00058)  &  (0.00090)  &  (0.00097)   &  (0.00089)   \\
Mother\'s Education     &             &             &              &              \\
Quartile 2             & -0.01588*** & -0.00194*** &  0.00879***  &  0.01940***  \\
&  (0.00044)  &  (0.00058)  &  (0.00035)   &  (0.00056)   \\
Quartile 3             & -0.01429*** & -0.02407*** &  0.01773***  &  0.00579***  \\
&  (0.00047)  &  (0.00062)  &  (0.00037)   &  (0.00061)   \\
Quartile 4             & -0.01175*** & -0.01512*** & -0.00203***  &  0.00486***  \\
&  (0.00047)  &  (0.00063)  &  (0.00038)   &  (0.00062)   \\
Control for Sample     &     Yes     &     Yes     &     Yes      &     Yes      \\ \ hline
Observations           &   63,364    &   63,364    &    63,364    &   63,364    \\
R-squared              &   0.53002   &   0.61506   &   0.52325    &   0.70950 '
as.numeric('c')
s[1]
str_sub(2, 1)
str_sub(s, 1,1)
str_sub(s, 2,1)
str_sub(s, 2,2)
str_sub(s, 20,20)
str_sub(s, 30,30)
str_sub(s, 31,31)
str_sub(s, 28,28)
str_sub(s, 28-1,28+5)
as.numeric(str_sub(s, 28-1,28+5))
round(as.numeric(str_sub(s, 28-1,28+5)),3)
s2 <- s
pos = 28
num <- str_sub(s2, pos-1, pos+5)
round <- round(as.numeric(num),3)
s2 <- str_replace(s2, num, round)
s2 <- str_replace(s2, num, as.character(round))
s2
s2 <- s
pos <-  0
while (nchar(s2) > pos) {
pos <- pos + 1
if (str_sub(s2, pos, pos) == '.') {
num <- str_sub(s2, pos-1, pos+5)
round <- round(as.numeric(num),3)
s2 <- str_replace(s2, num, as.character(round))
}
}
s2
help(round)
s2 <- s
pos <-  0
while (nchar(s2) > pos) {
pos <- pos + 1
if (str_sub(s2, pos, pos) == '.') {
num <- str_sub(s2, pos-1, pos+5)
round <- signif(as.numeric(num),3)
s2 <- str_replace(s2, num, as.character(round))
}
}
s2
s2 <- s
pos <-  0
while (nchar(s2) > pos) {
pos <- pos + 1
if (str_sub(s2, pos, pos) == '.') {
num <- str_sub(s2, pos-1, pos+5)
round <- sprintf("%.3f",round(as.numeric(num),3))
s2 <- str_replace(s2, num, round)
}
}
s2
print(s2)
s <- '			Demographics & 0.00030    & 0.00037*** mpfmpf
& (0.00040)  & (0.00010)  mpfmpf
Coefficients & 0.03161*** & 0.01271*** mpfmpf
& (0.00029)  & (0.00023)  mpfmpf
Interaction  & 0.00089*** & 0.00061**  mpfmpf
& (0.00028)  & (0.00028) mpfmpf
mpfhline
mpfmulticolumn{3}{l}{Response to 90/10 Ratio}     mpfmpf
Demographics & 0.00116    & 0.00905*** mpfmpf
& (0.00076)  & (0.00098)  mpfmpf
Coefficients & 0.04490*** & 0.00000    mpfmpf
& (0.00049)  & (0.00050)  mpfmpf
Interaction  & 0.00003    & 0.00020    mpfmpf
& (0.00032)  & (0.00037) mpfmpf
mpfhline
mpfmulticolumn{3}{l}{Response to Unemployment}        mpfmpf
Demographics & 0.00191***  & -0.00003    mpfmpf
& (0.00044)   & (0.00066)   mpfmpf
Coefficients & -0.00766*** & -0.01901*** mpfmpf
& (0.00021)   & (0.00035)   mpfmpf
Interaction  & 0.00044***  & 0.00105***  mpfmpf
& (0.00015)   & (0.00033)  mpfmpf
mpfhline
mpfmulticolumn{3}{l}{Response to Major-Occupation Gini}        mpfmpf
Demographics & 0.00167**  & 0.00210**  mpfmpf
& (0.00073)  & (0.00098)  mpfmpf
Coefficients & 0.13079*** & 0.01990*** mpfmpf
& (0.00046)  & (0.00057)  mpfmpf
Interaction  & -0.00055*  & 0.00081**  mpfmpf
& (0.00031)  & (0.00041) mpfmpf'
s2 <- s
pos <-  0
while (nchar(s2) > pos) {
pos <- pos + 1
if (str_sub(s2, pos, pos) == '.') {
num <- str_sub(s2, pos-1, pos+5)
round <- sprintf("%.4f",round(as.numeric(num),4))
s2 <- str_replace(s2, num, round)
}
}
s2
library(sampleSelection)
help(package='heckman')
help(package='sampleSelection')
df <- read.csv('https://raw.githubusercontent.com/NickCH-K/LOST/master/Data/Fixed_Effects_in_Linear_Regression/Scorecard.csv')
View(df)
data(Mroz87)
View(Mroz87)
setwd("C:/Users/nhuntington-klein/Dropbox (CSU Fullerton)/General Work/LOST/Data/Heckman_Correction_Model")
write.csv(Mroz87,'Mroz87.csv')
help("Mroz87")
write.csv(Mroz87,'Mroz87.csv',row.names = FALSE)
table(df$city)
table(Mroz87$city)
# Put them together in a selection() command
heck_model <- selection(lfp ~ exper + I(exper^2) + faminc + educ + kids,
wage ~ exper + I(exper^2) + educ + city,
Mroz87)
# Put them together in a selection() command
heck_model <- selection(lfp ~ exper + I(exper^2) + faminc + educ + kids5,
wage ~ exper + I(exper^2) + educ + city,
Mroz87)
summary(heck_model)
